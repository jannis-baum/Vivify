#!/bin/sh

print_usage() {
    cat <<EOF
usage: viv target [target ...]

View file/directory in your browser with Vivify.

arguments:
  target              Path to file or directory to view. For Markdown, you can
                      suffix with :n to scroll to the content at line n in the
                      source file
options:
  --help              show this help message and exit
  --version           show version information and exit
EOF
}

print_bug_report() {
    cat <<EOF
Fatal: vivify-server crashed. Please use the link below to submit a bug report.

The bug report template will help you provide the necessary information and
maybe even find a solution yourself.

https://github.com/jannis-baum/Vivify/issues/new?labels=type%3Abug&template=bug-report.md

EOF
}

if [ "$#" -lt 1 -o "$1" = "-h" -o "$1" = "--help" ]; then
    print_usage
    exit 1
fi

output=`mktemp`
cleanup() {
    rm -f "$output"
}
trap cleanup EXIT

nohup vivify-server $@ > "$output" 2> /dev/null &
server_pid=$!

monitor_server() {
    while true; do
        # server process ended
        if ! kill -0 $server_pid 2>/dev/null; then
            # check if startup was completed successfully, if so we can exit
            test -f "$output" || exit 0
            grep --quiet "STARTUP COMPLETE" "$output" && exit 0

            # if not, the startup failed
            print_bug_report
            # kill tail from while loop below
            pkill -P $$ tail
            exit 1
        fi
        sleep 0.3
    done
}
monitor_server </dev/null &>/dev/null &
disown

# print stdout of vivify-server until STARTUP COMPLETE is found
tail -f "$output" | while read line; do
    # server finished starting
    if echo "$line" | grep --quiet "STARTUP COMPLETE"; then
        pkill -P $$ tail
        break
    fi

    echo "$line"
done
